#!/usr/bin/env bash
DOCKER_VERSION_RESPONSE=$(docker -v)
EXPECTED_RESPONSE="Docker version "
if test "${DOCKER_VERSION_RESPONSE#*$EXPECTED_RESPONSE}" != "$DOCKER_VERSION_RESPONSE"; then
  if [ -n "$JOB_BASE_NAME" ]; then
    CODEFEND_CONTAINER="$JOB_BASE_NAME"
  fi
  if [ -z "$CODEFEND_CONTAINER" ]; then
    CODEFEND_CONTAINER="codefend"
  fi
  CODEFEND_CONTAINER=${CODEFEND_CONTAINER// /_}
  if [ -z "$CODEFEND_IMAGE" ]; then
    export CODEFEND_IMAGE="shibme/codefend"
    docker pull "$CODEFEND_IMAGE"
  fi

  CODEFEND_COMMAND="docker run --rm "
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e CODEFEND_PROJECT"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e CODEFEND_DIR"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e CODEFEND_CONTEXT"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e CODEFEND_LANG"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e CODEFEND_TOOL"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e CODEFEND_BUILDSCRIPT"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e CODEFEND_GIT_REPO"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e CODEFEND_GIT_BRANCH"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e CODEFEND_GIT_COMMIT"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e CODEFEND_GIT_USERNAME"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e CODEFEND_GIT_TOKEN"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e CODEFEND_GIT_SSHKEY"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_CONFIG"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_PROJECT_KEY"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_ISSUE_TYPE"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_PRIORITY_P0"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_PRIORITY_P1"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_PRIORITY_P2"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_PRIORITY_P3"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_PRIORITY_P4"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_TRACKER_NAME"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_TRACKER_ENDPOINT"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_TRACKER_USERNAME"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_TRACKER_PASSWORD"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_TRACKER_API_KEY"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_DRY_RUN"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_EXIT_CODE_NEW_ISSUES"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_EXIT_CODE_FAILURE"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_UPDATE_SUMMARY"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_UPDATE_DESCRIPTION"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_UPDATE_LABELS"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_PRIORITIZE_UP"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_PRIORITIZE_DOWN"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_ASSIGNEE"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_REOPEN_STATUS"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_RESOLVED_STATUSES"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_CLOSED_STATUSES"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_IGNORE_LABELS"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_IGNORE_STATUSES"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_AUTO_REOPEN_AFTER"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_AUTO_REOPEN_TRANSITION"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_AUTO_REOPEN_COMMENT"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_AUTO_RESOLVE_AFTER"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_AUTO_RESOLVE_TRANSITION"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -e STEWARD_AUTO_RESOLVE_COMMENT"
  CODEFEND_COMMAND="$CODEFEND_COMMAND --name $CODEFEND_CONTAINER"
  CODEFEND_COMMAND="$CODEFEND_COMMAND -v $(pwd):/codefend $CODEFEND_IMAGE"

  echo "Now running: $CODEFEND_CONTAINER"
  echo $CODEFEND_COMMAND | bash
else
  echo "Please install docker client before you begin."
  exit 1
fi